{"version":3,"file":"types.js","sourceRoot":"/","sources":["types.ts"],"names":[],"mappings":"","sourcesContent":["export interface ConstructData {\n  gcp?: GCPData\n  sentry?: SentryData\n  file?: fileData\n  console?: consoleData\n}\nexport interface fileData {\n  enabled: boolean\n  config: {\n    logDirectory: string\n    fileNamePattern: string\n    dateFormat: string\n  }\n}\nexport interface consoleData {\n  enabled: boolean\n}\nexport interface GCPData {\n  enabled: boolean\n  projectid: string\n  logname: string\n}\nexport interface SentryData {\n  enabled: boolean\n  config: {\n    dsn: string\n    debug?: boolean\n    release?: string\n    environment?: string\n    serverName?: string\n    sampleRate?: number\n    maxBreadcrumbs?: number\n    attachStacktrace?: boolean\n    tracesSampleRate?: number\n    normalizeDepth?: number\n  }\n  extras?: {\n    user?: {\n      email?: string\n    }\n    tags?: StringPair[]\n    context?: SentryContext[]\n  }\n}\ntype SentryContext = {\n  name: string\n  data: Record<string, unknown>\n}\ntype StringPair = {\n  key: string\n  value: string\n}\nexport type constructPair = {\n  data: string\n  level: number\n}\nexport interface loggingData extends Error {\n  raw?: string\n  error?: Error\n  translate?: T\n}\nexport type T = {\n  defaultValue?: string[]\n  count?: number\n  context?: string\n  replace?: string[]\n  lng?: string\n  lngs?: string[]\n  fallbackLng?: string\n  ns?: string\n  keySeparator?: string\n  nsSeparator?: string\n  returnObjects?: boolean\n  joinArrays?: string\n  postProcess?: string | string[]\n  interpolation?: interpolation\n  skipInterpolation?: boolean\n}\ntype interpolation = {\n  format?: () => string\n  formatSeparator?: string\n  escape?: (str?: string) => string\n  escapeValue?: boolean\n  useRawValueToEscape?: boolean\n  prefix?: string\n  suffix?: string\n  prefixEscaped?: string\n  suffixEscaped?: string\n  unescapeSuffix?: string\n  unescapePrefix?: string\n  nestingPrefix?: string\n  nestingSuffix?: string\n  nestingPrefixEscaped?: string\n  nestingSuffixEscaped?: string\n  nestingOptionsSeparator?: string\n  defaultVariables?: any[] | {}\n  maxReplaces?: number\n  skipOnVariables?: boolean\n}\n"]}