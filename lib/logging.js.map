{"version":3,"file":"logging.js","sourceRoot":"/","sources":["logging.ts"],"names":[],"mappings":"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","sourcesContent":["import { Log, Logging } from '@google-cloud/logging'\nimport * as Sentry from '@sentry/node'\nimport chalk from 'chalk'\nimport * as fs from 'fs'\nimport { decode } from 'html-entities'\nimport os from 'os'\nimport {\n  ConstructData,\n  constructPair,\n  fileDataType,\n  GCPData,\n  LoggingDataClass,\n  LoggingLevels,\n  LogReturn,\n  LogReturned,\n  SentryDataType\n} from '.'\nimport { i18, Localizer } from './localize'\n\nglobal.__rootdir__ = __dirname || process.cwd()\n\n/**\n * Configures Chalk\n * @author TGTGamer\n * @since 1.0.0-alpha\n */\nexport const style = {\n  brand: {\n    videndumPurple: chalk.hex('4B428E')\n  }\n}\ntype logLevels = {\n  name: logTypes\n  chalk: chalk.Chalk\n}[]\ntype logTypes =\n  | 'DEFAULT'\n  | 'DEBUG'\n  | 'INFO'\n  | 'NOTICE'\n  | 'WARN'\n  | 'ERROR'\n  | 'CRITICAL'\n  | 'ALERT'\n  | 'EMERGENCY'\n\n/**\n * Main class used for package\n * @author TGTGamer\n * @since 1.0.0-alpha\n */\nexport class Logger {\n  private gcp: Logging = new Logging()\n  protected constructData: ConstructData | undefined\n  public loglevel: number = 1\n  public readonly sentry = Sentry\n  public readonly loglevels: logLevels = [\n    {\n      name: 'DEFAULT',\n      chalk: chalk.inverse\n    },\n    {\n      name: 'DEBUG',\n      chalk: chalk.grey\n    },\n    {\n      name: 'INFO',\n      chalk: chalk.green\n    },\n    {\n      name: 'NOTICE',\n      chalk: chalk.greenBright\n    },\n    {\n      name: 'WARN',\n      chalk: chalk.white\n    },\n    {\n      name: 'ERROR',\n      chalk: chalk.yellow\n    },\n    {\n      name: 'CRITICAL',\n      chalk: chalk.yellow\n    },\n    {\n      name: 'ALERT',\n      chalk: chalk.red\n    },\n    {\n      name: 'EMERGENCY',\n      chalk: chalk.red\n    }\n  ]\n  private constructorLogs: constructPair[] = []\n  gcpLogger: Log | undefined\n  public configured: boolean = false\n  i18: Localizer = new Localizer()\n\n  constructor(options: { i18?: i18; logger: ConstructData }) {\n    this.main(options)\n  }\n  async main(options: { i18?: i18; logger: ConstructData }) {\n    this.constructData = options.logger\n    await this.i18.main(options.i18)\n    if (options.logger.logLevel) this.setloglevel(options.logger.logLevel)\n    else if (process.env.LOGLEVEL) this.loglevel = +process.env.LOGLEVEL\n    this.configureLogger(options.logger)\n  }\n\n  async configureLogger(constructData: ConstructData) {\n    if (constructData.gcp?.enabled) await this.configureGCP(constructData.gcp)\n    if (constructData.sentry?.enabled)\n      await this.configureSentry(constructData.sentry)\n    if (constructData.file?.enabled)\n      await this.configureFile(constructData.file)\n    this.constructorLogs.forEach(log => {\n      this.log(log.data)\n    })\n    this.configured = true\n  }\n\n  async configureGCP(gcpData: GCPData) {\n    this.constructorLogs.push({\n      data: {\n        name: '200',\n        message: 'videndum:logging.gcp.constructor',\n        translate: true\n      },\n      level: 1\n    })\n    this.gcp = new Logging({ projectId: gcpData.projectid })\n    this.gcpLogger = this.gcp.log(gcpData.logname)\n  }\n\n  async configureSentry(SentryData: SentryDataType) {\n    this.constructorLogs.push({\n      data: {\n        name: '200',\n        message: 'videndum:logging.sentry.constructor',\n        translate: true\n      },\n      level: 1\n    })\n    try {\n      this.sentry.init({\n        ...SentryData.config,\n        integrations: [\n          new Sentry.Integrations.Console(),\n          new Sentry.Integrations.Modules(),\n          new Sentry.Integrations.Http({ tracing: true }),\n          new Sentry.Integrations.OnUncaughtException(),\n          new Sentry.Integrations.OnUnhandledRejection({ mode: 'warn' }),\n          new Sentry.Integrations.FunctionToString()\n        ],\n        tracesSampleRate: 0.2\n      })\n      await this.configureSentryScope()\n    } catch (_) {\n      this.constructorLogs.push({\n        data: {\n          name: '200',\n          message: 'videndum:logging.sentry.error',\n          errors: _,\n          translate: true\n        },\n        level: 6\n      })\n    }\n  }\n\n  async configureSentryScope() {\n    this.sentry.configureScope(scope => {\n      scope.clear()\n      if (this.constructData?.sentry?.extras?.user)\n        scope.setUser(this.constructData?.sentry?.extras.user)\n      if (this.constructData?.sentry?.extras?.tags)\n        scope.setTags(this.constructData?.sentry?.extras.tags)\n      if (this.constructData?.sentry?.extras?.context)\n        this.constructData?.sentry?.extras.context.forEach(context => {\n          scope.setContext(context.name, context.data)\n        })\n    })\n  }\n\n  /**\n   * Sets up local logging to file\n   * @author TGTGamer\n   * @since 1.0.0-alpha\n   */\n  async configureFile(fileData: fileDataType) {\n    this.constructorLogs.push({\n      data: {\n        name: '200',\n        message: 'videndum:logging.file.constructor',\n        translate: true\n      },\n      level: 1\n    })\n    fs.access(fileData.config.logDirectory, fs.constants.F_OK, (err: any) => {\n      if (!err) {\n        return\n      } else {\n        this.constructorLogs.push({\n          data: {\n            name: '200',\n            message: 'videndum:errors.fileDirectory.caught',\n            errors: err,\n            translate: true\n          },\n          level: 6\n        })\n        fs.mkdir(\n          fileData.config.logDirectory,\n          { recursive: false },\n          async (err2: any) => {\n            if (err2)\n              this.constructorLogs.push({\n                data: {\n                  name: '200',\n                  message: 'videndum:errors.fileDirectory.thrown',\n                  errors: err2,\n                  translate: true\n                },\n                level: 6\n              })\n            else\n              this.constructorLogs.push({\n                data: {\n                  name: '200',\n                  message: 'videndum:errors.fileDirectory.solved',\n                  errors: err2,\n                  translate: true\n                },\n                level: 3\n              })\n          }\n        )\n      }\n    })\n  }\n\n  /**\n   * Change the logging level.\n   * @param {number | string} level - Logging level to use.\n   */\n  async setloglevel(level: LoggingLevels) {\n    this.loglevel = Number(level) / 100\n  }\n\n  /**\n   * Log your information or error to all platforms\n   * @param  {loggingData} loggingData\n   * @param  {number | string} type Optional types. Accepts both Numbers & String values. 1=debug, 2=info, 3=notice, 4=warn, 5=error, 6=critical, 7=alert, 8=emergency\n   * @example\n   * try {\n   *  core.user.getUserID(core.license.license_holder_email)\n   *  } catch(response){\n   *    core.log(response, 1)\n   *  }\n   * @return logs data to console, sentry and log file as appropriate\n   */\n  async log(loggingData: LoggingDataClass): Promise<LogReturn> {\n    if (this.constructData == undefined)\n      throw new Error('Logging Utility hasnt initialised')\n    if (loggingData.translate)\n      loggingData.message = this.i18.t(loggingData.message, loggingData.T)\n    if (loggingData.decode) loggingData.message = decode(loggingData.message)\n    if (loggingData.errors) {\n      if (!Array.isArray(loggingData.errors))\n        loggingData.message = loggingData.message + ' ' + loggingData.errors\n      else {\n        loggingData.errors.forEach(\n          error => (loggingData.message = loggingData.message + ' ' + error)\n        )\n      }\n    }\n    if (!loggingData.userData) {\n      loggingData.userData = {\n        username: os.userInfo().username\n      }\n      loggingData.userData.platform = os.platform()\n      loggingData.userData.arch = os.arch()\n      loggingData.userData.release = os.release()\n    }\n    let result: LogReturn = {}\n    // Defines log type\n    let type = Number(loggingData.name) / 100\n    result.gcp = await this.loggcp(loggingData)\n    // Translate the metadata\n    loggingData.name = this.loglevels[type].name.toLowerCase()\n    loggingData.name = await this.translate(\n      `videndum:logging.${loggingData.name}`\n    )\n    if (loggingData.name) loggingData.name = loggingData.name.toUpperCase()\n    result.console = await this.logconsole(loggingData, type)\n    result.file = await this.logfile(loggingData, type)\n    result.sentry = await this.logsentry(loggingData, type)\n    return result\n  }\n  async loggcp(loggingData: LoggingDataClass): Promise<LogReturned> {\n    // log to cloud logger\n    if (this.constructData?.gcp?.enabled) {\n      try {\n        if (!this.gcpLogger)\n          return {\n            logged: false\n          }\n        if (!loggingData.metadata)\n          loggingData.metadata = {\n            resource: {\n              type: 'global'\n            },\n            severity: Number(loggingData.name)\n          }\n        let entry = this.gcpLogger.entry(\n          loggingData.metadata,\n          loggingData.message\n        )\n        const logged = await this.gcpLogger.write(entry)\n        return {\n          logged: true,\n          success: true,\n          response: logged\n        }\n      } catch (err) {\n        console.log(err)\n        this.constructData.gcp.enabled = false\n        return {\n          logged: true,\n          success: false\n        }\n      }\n    }\n    return {\n      logged: false\n    }\n  }\n\n  async logfile(\n    loggingData: LoggingDataClass,\n    type: number\n  ): Promise<LogReturned> {\n    if (type >= this.loglevel || process.env.DEBUG == 'true') {\n      // Log to local logger\n      if (this.constructData?.file?.enabled) {\n        try {\n          fs.appendFile(\n            `${this.constructData.file?.config.logDirectory}/${this.constructData.file?.config.fileNamePattern}`,\n            `[${loggingData.name}]  ` + loggingData.message + '\\r\\n',\n            err => {\n              if (err) throw err\n            }\n          )\n          return {\n            logged: true,\n            success: true\n          }\n        } catch (err) {\n          this.log(err)\n          this.constructData.file.enabled = false\n          return {\n            logged: true,\n            success: false\n          }\n        }\n      }\n    }\n    return {\n      logged: false\n    }\n  }\n  async logsentry(\n    loggingData: LoggingDataClass,\n    type: number\n  ): Promise<LogReturned> {\n    // Log to sentry\n    if (type > 4 && this.constructData?.sentry?.enabled) {\n      try {\n        const data = loggingData\n        data.name = loggingData.message\n        this.sentry.configureScope(scope => {\n          scope.setUser({\n            username: loggingData.userData?.username,\n            email: loggingData.userData?.email\n          })\n          scope.setContext('device', {\n            Platform: loggingData.userData?.platform,\n            Arch: loggingData.userData?.arch,\n            Release: loggingData.userData?.release\n          })\n          scope.setTag('Platform', loggingData.userData?.platform)\n          scope.setTag('Arch', loggingData.userData?.arch)\n          if (loggingData.tags) scope.setTags(loggingData.tags)\n          if (loggingData.context)\n            loggingData.context.forEach(context =>\n              scope.setContext(context.name, context.data)\n            )\n          if (type == 5) scope.setLevel(this.sentry.Severity.Error)\n          else if (type == 6) scope.setLevel(this.sentry.Severity.Critical)\n          else if (type >= 7) scope.setLevel(this.sentry.Severity.Fatal)\n        })\n        const returning: LogReturned = {\n          logged: true,\n          success: true,\n          eventID: this.sentry.captureException(data)\n        }\n        await this.configureSentryScope()\n        return returning\n      } catch (_) {\n        this.log(\n          new LoggingDataClass(LoggingLevels.error, 'Failed to log to sentry', {\n            errors: _\n          })\n        )\n        this.constructData.sentry.enabled = false\n        return {\n          logged: true,\n          success: false\n        }\n      }\n    }\n    return {\n      logged: false\n    }\n  }\n\n  async logconsole(\n    loggingData: LoggingDataClass,\n    type: number\n  ): Promise<LogReturned> {\n    if (this.constructData?.console?.enabled) {\n      loggingData.name = this.loglevels[type].chalk(loggingData.name)\n      // if (!!this.constructData?.console?.enabled)\n      console.log(`[${loggingData.name}]  ` + loggingData.message)\n      return {\n        logged: true,\n        success: true\n      }\n    } else\n      return {\n        logged: false\n      }\n  }\n\n  async translate(name: string): Promise<string> {\n    return this.i18.t(name)\n  }\n\n  /**\n   * Used to shutdown logging - to ensure that all logs are processed\n   * @author TGTGamer\n   * @since 1.0.0-alpha\n   */\n  async shutdown(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      this.sentry\n        .close(2000)\n        .then(async () => {\n          await this.log(\n            new Error('Logger successfully shutdown - safe to end all process')\n          )\n          resolve()\n        })\n        .catch(_ => reject(_))\n    })\n  }\n}\n"]}