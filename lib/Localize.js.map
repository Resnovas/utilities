{"version":3,"file":"localize.js","sourceRoot":"/","sources":["localize.ts"],"names":[],"mappings":"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","sourcesContent":["import i18Next from 'i18next'\nimport { T } from './types'\nconst Backend = require('i18next-fs-backend')\nclass Localizer {\n  private locales = `${process.cwd()}/locales`\n  public readonly localize = i18Next\n\n  constructor() {\n    this.localize.on('initialized', (options: any) => {\n      console.log(\n        `Localisation has started. Current language is ${options.lng}`\n      )\n    })\n    this.localize.on('onLanguageChanged', (lng: any) => {\n      console.log(`Localisation has changed to ${lng}`)\n    })\n    this.localize.on(\n      'onLanguageChanged',\n      (lngs: any, namespace: any, key: any, res: any) => {\n        console.log(\n          `${this.t('error.unspecific.localize')}: ${lngs}/${namespace}/${key}`\n        )\n      }\n    )\n    this.localize.use(Backend).init({\n      lng: 'en',\n      backend: {\n        loadPath: `${this.locales}/{{lng}}.json`, // `${this.locales}/{{lng}}/{{ns}}.json`,\n        addPath: `${this.locales}/{{lng}}.missing.json`\n      },\n      fallbackLng: {\n        'de-CH': ['fr', 'it'],\n        'zh-Hant': ['zh-Hans', 'en'],\n        es: ['fr'],\n        default: ['en']\n      },\n      supportedLngs: [\n        'es',\n        'ja',\n        'fr',\n        'it',\n        'en',\n        'zh',\n        'ko',\n        'en-GB',\n        'en-US',\n        'de-CH',\n        'zh-Hant',\n        'zh-Hans'\n      ],\n      saveMissing: true,\n      saveMissingTo: 'current',\n      returnEmptyString: false,\n      returnNull: false,\n      initImmediate: false\n    })\n  }\n\n  t = (input: string, options?: T): string => {\n    if (!options) options = {}\n    if (!options.replace) options.replace = []\n    options.replace.push('what', input)\n    return this.localize.t([input, 'error.unspecific.localize'], options)\n  }\n}\nexport const locales = new Localizer()\nexport const i18 = {\n  t: (input: string, options?: T): string => locales.t(input, options),\n  exists: locales.localize.exists,\n  getFixedT: locales.localize.getFixedT,\n  changeLanguage: locales.localize.changeLanguage,\n  language: locales.localize.language,\n  languages: locales.localize.languages,\n  loadNamespaces: locales.localize.loadNamespaces,\n  loadlanguages: locales.localize.loadLanguages,\n  reloadResources: locales.localize.reloadResources,\n  setDefaultNamespace: locales.localize.setDefaultNamespace,\n  dir: locales.localize.dir,\n  format: locales.localize.format\n}\n"]}