{"version":3,"file":"localize.js","sourceRoot":"/","sources":["localize.ts"],"names":[],"mappings":"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","sourcesContent":["import fs, { PathLike } from 'fs'\nimport i18Next, { Resource } from 'i18next'\nimport path from 'path'\nimport { T } from '.'\nconst intervalPlural = require('i18next-intervalplural-postprocessor')\n// const ReactPostprocessor = require('i18next-react-postprocessor')\nexport interface i18 {\n  localesLocation?: { [namespace: string]: string }\n  defaultNamespace?: string\n}\nexport class Localizer {\n  public readonly localize = i18Next\n\n  async main(construct?: i18) {\n    const resources = await this.createResources(construct?.localesLocation)\n    this.localize.use(intervalPlural).init({\n      lng: 'en',\n      resources: resources,\n      defaultNS: construct?.defaultNamespace,\n      fallbackLng: {\n        'de-CH': ['fr', 'it'],\n        'zh-Hant': ['zh-Hans', 'en'],\n        es: ['fr'],\n        default: ['en']\n      },\n      supportedLngs: [\n        'es',\n        'ja',\n        'fr',\n        'it',\n        'en',\n        'zh',\n        'ko',\n        'en-GB',\n        'en-US',\n        'de-CH',\n        'zh-Hant',\n        'zh-Hans'\n      ],\n      returnEmptyString: false,\n      returnNull: false,\n      initImmediate: false\n    })\n  }\n\n  async createResources(construct?: i18['localesLocation']): Promise<Resource> {\n    let resource: Resource = {}\n    if (typeof construct == 'undefined') construct = {}\n    construct['videndum'] = `${__dirname}/../locales`\n    for (let namespace in construct) {\n      let location: PathLike = path.normalize(construct[namespace] + '/')\n      const files = fs.readdirSync(location)\n      files.forEach(file => {\n        file = file.split('.').shift() || file\n        if (!resource[file]) {\n          resource[file] = {}\n          resource[file][namespace] = require(path.join(location + file))\n        } else if (!resource[file][namespace]) {\n          resource[file][namespace] = require(path.join(location + file))\n        } else {\n          resource[file][namespace].concat(require(path.join(location + file)))\n        }\n      })\n    }\n    return resource\n  }\n\n  t = (input: string, options?: T): string => {\n    return this.localize.t([input, 'videndum:errors.unspecific.localize'], {\n      ...options,\n      replace: {\n        ...options?.replace,\n        what: input\n      }\n    })\n  }\n  exists = this.localize.exists\n  getFixedT = this.localize.getFixedT\n  changeLanguage = this.localize.changeLanguage\n  language = this.localize.language\n  languages = this.localize.languages\n  loadNamespaces = this.localize.loadNamespaces\n  loadlanguages = this.localize.loadLanguages\n  reloadResources = this.localize.reloadResources\n  setDefaultNamespace = this.localize.setDefaultNamespace\n  dir = this.localize.dir\n  format = this.localize.format\n}\n"]}